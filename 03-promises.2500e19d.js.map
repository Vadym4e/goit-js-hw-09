{"mappings":"qhBA8CA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAEpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GAE5BA,EAAM,G,CAXYN,SAASC,cAAc,yBAgB/Ba,iBAAiB,SAASC,IACzCA,EAAEC,iBACF,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIlB,EAAOgB,MAAOE,IAChCjB,EAAc,EAAIiB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,EAACjB,SAAEA,EAAUQ,MAAAU,MACjBC,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBrB,QAAiBkB,MAAU,IAGnDI,OAAM,EAACtB,SAAEA,EAAUQ,MAAAe,MAClBJ,EAAA3B,GAAS4B,OAAOI,QACd,sBAAoBxB,QAAeuB,MAAU,IAIrDE,KAAKC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const form = document.querySelector('.form');\n// const delay = document.querySelector('[name=\"delay\"]');\n// const step = document.querySelector('[name=\"step\"]');\n// const amount = document.querySelector('[name=\"amount\"]');\n// const buttonCreate = document.querySelector('[type=\"submit\"]');\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     });\n//   });\n\n//   return promise;\n// }\n\n// buttonCreate.addEventListener('click', evt => {\n//   let firstDalay = Number(delay.value);\n//   let stepDelay = Number(step.value);\n\n//   for (let i = 0; i < amount.value; i += 1) {\n//     createPromise(i + 1, firstDalay + 1 * stepDelay)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//   }\n\n//   form.reset();\n// });\n\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","form","reset"],"version":3,"file":"03-promises.2500e19d.js.map"}